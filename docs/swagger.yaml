basePath: /
definitions:
  model.Address:
    properties:
      city:
        example: Springfield
        type: string
      district:
        example: Greene
        type: string
      lane:
        example: 123 Main St.
        type: string
      pincode:
        example: 12345
        type: integer
      state:
        example: IL
        type: string
      village:
        example: Springfield
        type: string
    required:
    - city
    - district
    - pincode
    - state
    type: object
  model.Name:
    properties:
      first_name:
        example: John
        type: string
      last_name:
        example: Doe
        type: string
      middle_name:
        example: A.
        type: string
    required:
    - first_name
    - last_name
    - middle_name
    type: object
  model.User:
    properties:
      active:
        example: true
        type: boolean
      address:
        $ref: '#/definitions/model.Address'
      created_at:
        example: ""
        type: string
      created_by:
        example: shubham
        type: string
      deleted_at:
        example: ""
        type: string
      deleted_by:
        example: ""
        type: string
      email:
        example: test@gmail.com
        type: string
      id:
        example: ""
        type: string
      name:
        $ref: '#/definitions/model.Name'
      password:
        example: password
        type: string
      updated_at:
        example: ""
        type: string
      updated_by:
        example: ""
        type: string
    required:
    - address
    - created_by
    - email
    - name
    - password
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: School Management API
  version: "1.0"
paths:
  /user/{id}:
    get:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      security:
      - ApiKeyAuth: []
      summary: Get a user by ID
      tags:
      - users
  /user/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.User'
      summary: Create a user
      tags:
      - users
  /user/list:
    get:
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of results per page (default: 10)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get all users
      tags:
      - users
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
